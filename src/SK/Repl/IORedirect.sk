;;;; Module containing function to redirect stdout.

(require SK.Core)

(defmodule SK.Repl.IORedirect
  (use
   (GHC.IO.Handle (hDuplicate hDuplicateTo))
   (Control.Exception)
   (System.IO ((IOMode ..) hClose stdout withFile)))
  (export with-io-redirect))

;;; Execute given action with redirecting stdout to given 'FilePath'.
(defn (with-io-redirect (-> FilePath (IO a) (IO (, a String))))
  (path action)
  (do (<- ret (withFile path
                        WriteMode
                        (\ hdl
                          (bracket
                           (hDuplicate stdout)
                           (\ stdout2
                             (do (hDuplicateTo stdout2 stdout)
                                 (hClose stdout2)))
                           (const
                            (do (hDuplicateTo hdl stdout)
                                action))))))

      ;; Ensure the evaluation of the file contents, so that the
      ;; exceptions from `action' can avoid file lock.
      (<- contents (readFile path))
      (seq contents (return (, ret contents)))))
