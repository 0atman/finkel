;;; -*- mode: sk -*-

(module Main)

;;; 12.1 Inlining

(:: inlineMe Int)
(= inlineMe 42)
##(INLINE inlineMe)

(:: dontInlineMe Int)
(= dontInlineMe 43)
##(NOINLINE dontInlineMe)

(:: iAmInlinable Int)
(= iAmInlinable 44)
##(INLINABLE iAmInlinable)

(:: inlineprgm (IO ()))
(= inlineprgm
  (do (print inlineMe)
      (print dontInlineMe)
      (print iAmInlinable)))

;;; 12.2 Specialization

(:: specializeMe1 (=> (Num a) (Show a) (-> a String)))
(= specializeMe1 x (show (+ x 1)))

##(SPECIALIZE (:: specializeMe1 (-> Int String)))
##(SPECIALIZE (:: specializeMe1 (-> Integer String)))
##(SPECIALIZE (:: specializeMe1 (-> Float String)))
##(SPECIALIZE (:: specializeMe1 (-> Double String)))

(:: specprgm (IO ()))
(= specprgm
  (do (putStrLn (specializeMe1 (:: 41 Int)))
      (putStrLn (specializeMe1 (:: 41 Integer)))
      (putStrLn (specializeMe1 (:: 41 Double)))
      (putStrLn (specializeMe1 (:: 41 Float)))))

;;; GHC extension: UNPACK

(data D1
  (C1 ##UNPACK (! Int) ##UNPACK (! Char))
  (deriving (Eq Show)))

(:: unpackprgm (IO ()))
(= unpackprgm
  (print (C1 42 \x)))

(:: main (IO ()))
(= main
  (do inlineprgm
      specprgm
      unpackprgm))
