(module P01.G1)

(import SK.Core)

;;; Simple definition of `defmacro' used in `p01' package.
(define-macro defmacro (form)
  (case form
    ((L _ (TList [_ name args body]))
     (case args
       ((L l1 (TList _))
        (let ((= body'
                `(define-macro ,name (form)
                   (case form
                     ((L l2 (TList [_ ,@args]))
                      (return (locateForm l2 ,body)))
                     (_
                      (failS (++ (show ',name) ": error")))))))
          (return (locateForm l1 body'))))
       ((L l1 (TAtom _))
        (let ((= body'
                `(define-macro ,name (,args)
                   (return (locateForm (getLoc ,args) ,body)))))
          (return (locateForm l1 body'))))))
    (_
     (failS (++ (showLoc form) "defmacro: error")))))
